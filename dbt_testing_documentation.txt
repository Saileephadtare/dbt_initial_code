#sources for staging source_dbt_house.yml

src
version: 2
sources:
  - name: dbt_house 
    database: DBT
    schema: DBT_SCHEMA
    tables:
      - name: HOUSE_RENT_TBL
      - name: HOUSE_SALE_TBL
	  
	  
	  
#Testing  generic tests dbt_house_test.yml

version: 2

models:
  - name: stg_sale_house
    description: Apartment Details Available For Sale
    columns: 
      - name: Apartment_Name
        description: Name of the apartment
        quote: true 
        tests:
          - unique
          - not_null

      - name: House_Price  
        description: Price of the house 
        quote: true
        tests:
          - not_null

      - name: Ownership   
        description: It's available on lease or self owned apartment
        quote: true 
        tests:
          - not_null
              
      - name: Furniture
        description: "{{doc('sale_furniture_status')}}"
        quote: true 
        tests:
          - accepted_values:           
              values: ['Semi','Unfurnished','Fully furnished']
              quote: true
                

  - name: stg_rent_house
    description: Apartment Details Available For Rent
    columns:
      - name: Name
        description: Name of the apartment for rented property
        quote: true
        tests:
          - unique
          - not_null

      - name: Deposit 
        description: Deposit to be paid
        quote: true
        tests:
          - not_null

      - name: House_Rent
        description: Rent amount to be paid every month
        quote: true
        tests:
          - not_null
                        
      - name: Furniture_Status
        description: "{{doc('rent_furniture_status')}}"
        quote: true
        tests:
          - accepted_values:
               values: ['Semi','Unfurnished','Full']
               quote: true

      - name: Tenant   
        description: It's available for family/coporate employee/female
        quote: true 
        tests:
          - not_null         


	  
	  
	  
	  
	  
	  
#document doc_block_for_sale_rent.md
	  
{% docs sale_furniture_status %}
	
One of the following values: 

| status         | definition              |
|----------------|-------------------------|
| Semi           | Flat not fully furnished|
| Unfurnished    | No Furniture Available  |
| Fully furnished| Furnished               |


{% enddocs %}

{% docs rent_furniture_status %}
	
One of the following values: 

| status         | definition              |
|----------------|-------------------------|
| Semi           | Flat not fully furnished|
| Unfurnished    | No Furniture Available  |
| Full           | Furnished               |


{% enddocs %}	  
	  
#Singular Test rent_deposit_test.sql	  
with rent_test as(
    select * from {{ref("stg_rent_house")}}
),
rent_deposit_test as(
Select 
"Name",
"Deposit" as Deposit,
"House_Rent" as Rent
from rent_test
)
select * from rent_deposit_test where Deposit<0 or Rent<0	  
	  
	 


----------------------------  project yml file where we defien model should created as table or view in one place --------dbt_project.yml----------------------------
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_house_PROJECT'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
 dbt_house_PROJECT:
    # Applies to all files under models/example/
      staging:
           +materialized: view
      #everything under it will be defined as view
      marts:
             +materialized: table
      #everything under it will be defined as table

	 
	  